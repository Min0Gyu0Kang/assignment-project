   0000000000001560 <main>:
   ; 0x0000555555555560 <+0>:       push   %rbp
   ; 0x0000555555555561 <+1>:       push   %r15
   ; 0x0000555555555563 <+3>:       push   %r14
   ; 0x0000555555555565 <+5>:       push   %rbx
   ; 0x0000555555555566 <+6>:       sub    $0xc8,%rsp
   ; 0x000055555555556d <+13>:      movabs $0x4e453453736e4c,%rax
   ; 0x0000555555555577 <+23>:      mov    %rax,0x2d(%rsp)
   ; 0x000055555555557c <+28>:      movups 0xacc(%rip),%xmm0        # 0x55555555604f
   ; 0x0000555555555583 <+35>:      movaps %xmm0,0x20(%rsp)
   ; 0x0000555555555588 <+40>:      movb   $0x0,0x34(%rsp)
   ; 0x000055555555558d <+45>:      lea    0xad0(%rip),%rdi        # 0x555555556064
   ; 0x0000555555555594 <+52>:      lea    0xad7(%rip),%rsi        # 0x555555556072
   ; 0x000055555555559b <+59>:      xor    %eax,%eax
   ; 0x000055555555559d <+61>:      call   0x555555555060 <printf@plt>
   ; 0x00005555555555a2 <+66>:      lea    0x1799(%rip),%rdi        # 0x555555556d42
   ; 0x00005555555555a9 <+73>:      lea    0x17bc(%rip),%rsi        # 0x555555556d6c
   ; 0x00005555555555b0 <+80>:      xor    %eax,%eax
   ; 0x00005555555555b2 <+82>:      call   0x555555555060 <printf@plt>
   ; 0x00005555555555b7 <+87>:      lea    0x17b9(%rip),%rdi        # 0x555555556d77
   ; 0x00005555555555be <+94>:      xor    %eax,%eax
   ; 0x00005555555555c0 <+96>:      call   0x555555555060 <printf@plt>
   ; 0x00005555555555c5 <+101>:     mov    0x3a14(%rip),%rax        # 0x555555558fe0
   ; 0x00005555555555cc <+108>:     mov    (%rax),%rdx
   ; 0x00005555555555cf <+111>:     lea    0x40(%rsp),%rdi
   ; 0x00005555555555d4 <+116>:     mov    $0x80,%esi
   0x00005555555555d9 <+121>:     call   0x555555555080 <fgets@plt> ;enter serial key
   0x00005555555555de <+126>:     test   %rax,%rax
   0x00005555555555e1 <+129>:     je     0x555555555776 <main+534>
   0x00005555555555e7 <+135>:     lea    0x17b6(%rip),%rsi        # 0x555555556da4
   0x00005555555555ee <+142>:     lea    0x40(%rsp),%rbx
   0x00005555555555f3 <+147>:     mov    %rbx,%rdi
   0x00005555555555f6 <+150>:     call   0x555555555070 <strcspn@plt>
   0x00005555555555fb <+155>:     movb   $0x0,0x40(%rsp,%rax,1)
   0x0000555555555600 <+160>:     lea    0x178d(%rip),%rdi        # 0x555555556d94
   0x0000555555555607 <+167>:     mov    %rbx,%rsi
   0x000055555555560a <+170>:     xor    %eax,%eax
   0x000055555555560c <+172>:     call   0x555555555060 <printf@plt> ;you entered <myinput>
   0x0000555555555611 <+177>:     lea    0x178e(%rip),%rdi        # 0x555555556da6
   0x0000555555555618 <+184>:     xor    %eax,%eax
   0x000055555555561a <+186>:     call   0x555555555060 <printf@plt> 
   0x000055555555561f <+191>:     mov    0x39b2(%rip),%rbx        # 0x555555558fd8
   0x0000555555555626 <+198>:     mov    (%rbx),%rdi
   0x0000555555555629 <+201>:     call   0x5555555550a0 <fflush@plt>
   0x000055555555562e <+206>:     mov    $0xfffd,%bp
   0x0000555555555632 <+210>:     cs nopw 0x0(%rax,%rax,1)
   0x000055555555563c <+220>:     nopl   0x0(%rax)
   0x0000555555555640 <+224>:     mov    $0xf4240,%edi
   0x0000555555555645 <+229>:     call   0x5555555550d0 <usleep@plt>
   0x000055555555564a <+234>:     mov    $0x2e,%edi
   0x000055555555564f <+239>:     call   0x555555555030 <putchar@plt>
   0x0000555555555654 <+244>:     mov    (%rbx),%rdi
   0x0000555555555657 <+247>:     call   0x5555555550a0 <fflush@plt>
   0x000055555555565c <+252>:     inc    %bp
   0x000055555555565f <+255>:     jne    0x555555555640 <main+224>
   0x0000555555555661 <+257>:     lea    0x9dc(%rip),%rdi        # 0x555555556044
   0x0000555555555668 <+264>:     xor    %eax,%eax
   0x000055555555566a <+266>:     call   0x555555555060 <printf@plt> ;verifying . . .
   0x000055555555566f <+271>:     mov    $0xa,%edi
   0x0000555555555674 <+276>:     call   0x555555555030 <putchar@plt>
   0x0000555555555679 <+281>:     lea    0x40(%rsp),%rdi
   0x000055555555567e <+286>:     call   0x555555555330 <function_e>
   0x0000555555555683 <+291>:     mov    $0x16,%ebx
   0x0000555555555688 <+296>:     test   %eax,%eax
   0x000055555555568a <+298>:     je     0x55555555574f <main+495>
   0x0000555555555690 <+304>:     lea    0x174c(%rip),%rdi        # 0x555555556de3
   0x0000555555555697 <+311>:     xor    %eax,%eax
   0x0000555555555699 <+313>:     call   0x555555555060 <printf@plt>
   0x000055555555569e <+318>:     mov    %rsp,%r15
   0x00005555555556a1 <+321>:     lea    0x40(%rsp),%r14
   0x00005555555556a6 <+326>:     mov    $0x4,%edx
   0x00005555555556ab <+331>:     mov    %r15,%rdi
   0x00005555555556ae <+334>:     mov    %r14,%rsi
   0x00005555555556b1 <+337>:     call   0x555555555040 <strncpy@plt>
   0x00005555555556b6 <+342>:     lea    0x4(%rsp),%rdi
   0x00005555555556bb <+347>:     lea    0x45(%rsp),%rsi
   0x00005555555556c0 <+352>:     mov    $0x4,%edx
   0x00005555555556c5 <+357>:     call   0x555555555040 <strncpy@plt>
   0x00005555555556ca <+362>:     lea    0x8(%rsp),%rdi
   0x00005555555556cf <+367>:     lea    0x4a(%rsp),%rsi
   0x00005555555556d4 <+372>:     mov    $0x4,%edx
   0x00005555555556d9 <+377>:     call   0x555555555040 <strncpy@plt>
   0x00005555555556de <+382>:     lea    0xc(%rsp),%rdi
   0x00005555555556e3 <+387>:     lea    0x4f(%rsp),%rsi
   0x00005555555556e8 <+392>:     mov    $0x4,%edx
   0x00005555555556ed <+397>:     call   0x555555555040 <strncpy@plt>
   0x00005555555556f2 <+402>:     lea    0x10(%rsp),%rdi
   0x00005555555556f7 <+407>:     lea    0x54(%rsp),%rsi
   0x00005555555556fc <+412>:     mov    $0x4,%edx
   0x0000555555555701 <+417>:     call   0x555555555040 <strncpy@plt>
   0x0000555555555706 <+422>:     movb   $0x0,0x14(%rsp)
   0x000055555555570b <+427>:     mov    $0x14,%edx
   0x0000555555555710 <+432>:     mov    %r14,%rdi
   0x0000555555555713 <+435>:     mov    %r15,%rsi
   0x0000555555555716 <+438>:     call   0x555555555040 <strncpy@plt>
   0x000055555555571b <+443>:     movb   $0x0,0x54(%rsp)
   0x0000555555555720 <+448>:     lea    0x20(%rsp),%rsi
   0x0000555555555725 <+453>:     mov    %r14,%rdi
   0x0000555555555728 <+456>:     mov    $0x83,%edx
   0x000055555555572d <+461>:     call   0x5555555553e0 <function_d>
   0x0000555555555732 <+466>:     test   %eax,%eax
   0x0000555555555734 <+468>:     je     0x555555555758 <main+504>
   0x0000555555555736 <+470>:     lea    0x1702(%rip),%rdi        # 0x555555556e3f
   0x000055555555573d <+477>:     xor    %eax,%eax
   0x000055555555573f <+479>:     call   0x555555555060 <printf@plt>
   0x0000555555555744 <+484>:     lea    0x1712(%rip),%rdi        # 0x555555556e5d
   0x000055555555574b <+491>:     xor    %ebx,%ebx
   0x000055555555574d <+493>:     jmp    0x55555555575f <main+511>
   0x000055555555574f <+495>:     lea    0x165a(%rip),%rdi        # 0x555555556db0
   0x0000555555555756 <+502>:     jmp    0x55555555575f <main+511>
   0x0000555555555758 <+504>:     lea    0x16a1(%rip),%rdi        # 0x555555556e00
   0x000055555555575f <+511>:     xor    %eax,%eax
   0x0000555555555761 <+513>:     call   0x555555555060 <printf@plt>
   0x0000555555555766 <+518>:     mov    %ebx,%eax
   0x0000555555555768 <+520>:     add    $0xc8,%rsp
   0x000055555555576f <+527>:     pop    %rbx
   0x0000555555555770 <+528>:     pop    %r14
   0x0000555555555772 <+530>:     pop    %r15
   0x0000555555555774 <+532>:     pop    %rbp
   0x0000555555555775 <+533>:     ret    
   0x0000555555555776 <+534>:     xor    %edi,%edi
   0x0000555555555778 <+536>:     call   0x5555555550b0 <exit@plt>