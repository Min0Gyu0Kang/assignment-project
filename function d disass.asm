   0x00000000000013e0 <+0>:     push   rbp
   0x00000000000013e1 <+1>:     push   r15
   0x00000000000013e3 <+3>:     push   r14
   0x00000000000013e5 <+5>:     push   r13
   0x00000000000013e7 <+7>:     push   r12
   0x00000000000013e9 <+9>:     push   rbx
   0x00000000000013ea <+10>:    sub    rsp,0x18
   0x00000000000013ee <+14>:    mov    r15d,edx
   0x00000000000013f1 <+17>:    mov    r14,rsi
   0x00000000000013f4 <+20>:    mov    r13,rdi
   0x00000000000013f7 <+23>:    mov    r12d,edx
   0x00000000000013fa <+26>:    sar    r12d,0x4
   0x00000000000013fe <+30>:    call   0x10c0 <__ctype_b_loc@plt>
   0x0000000000001403 <+35>:    mov    r10,QWORD PTR [rax]
   0x0000000000001406 <+38>:    xor    esi,esi
   0x0000000000001408 <+40>:    mov    r8d,0x39
   0x000000000000140e <+46>:    mov    r9d,0x30
   0x0000000000001414 <+52>:    cs nop WORD PTR [rax+rax*1+0x0]
   0x000000000000141e <+62>:    xchg   ax,ax
   0x0000000000001420 <+64>:    movsx  rbp,BYTE PTR [r13+rsi*1+0x0]
   0x0000000000001426 <+70>:    movzx  eax,WORD PTR [r10+rbp*2]
   0x000000000000142b <+75>:    xor    edi,edi
   0x000000000000142d <+77>:    test   eax,0x100
   0x0000000000001432 <+82>:    sete   dil
   0x0000000000001436 <+86>:    shl    edi,0x5
   0x0000000000001439 <+89>:    lea    ebx,[rdi+0x5a]
   0x000000000000143c <+92>:    or     edi,0x41
   0x000000000000143f <+95>:    test   eax,0x800
   0x0000000000001444 <+100>:   cmovne ebx,r8d
   0x0000000000001448 <+104>:   cmovne edi,r9d
   0x000000000000144c <+108>:   mov    ecx,ebx
   0x000000000000144e <+110>:   sub    ecx,edi
   0x0000000000001450 <+112>:   add    ecx,0x1
   0x0000000000001453 <+115>:   mov    eax,r12d
   0x0000000000001456 <+118>:   cdq    
   0x0000000000001457 <+119>:   idiv   ecx
   0x0000000000001459 <+121>:   add    edx,ebp
   0x000000000000145b <+123>:   mov    eax,edx
   0x000000000000145d <+125>:   sub    eax,ebx
   0x000000000000145f <+127>:   add    edi,eax
   0x0000000000001461 <+129>:   add    dil,0xff
   0x0000000000001465 <+133>:   test   eax,eax
   0x0000000000001467 <+135>:   movzx  eax,dil
   0x000000000000146b <+139>:   cmovle eax,edx
   0x000000000000146e <+142>:   mov    BYTE PTR [rsp+rsi*1],al
   0x0000000000001471 <+145>:   add    rsi,0x1
   0x0000000000001475 <+149>:   cmp    rsi,0xa
   0x0000000000001479 <+153>:   jne    0x1420 <function_d+64>
   0x000000000000147b <+155>:   and    r15d,0xf
   0x000000000000147f <+159>:   call   0x10c0 <__ctype_b_loc@plt>
   0x0000000000001484 <+164>:   mov    r10,QWORD PTR [rax]
   0x0000000000001487 <+167>:   xor    esi,esi
   0x0000000000001489 <+169>:   mov    r8d,0x39
   0x000000000000148f <+175>:   mov    r9d,0x30
   0x0000000000001495 <+181>:   cs nop WORD PTR [rax+rax*1+0x0]
   0x000000000000149f <+191>:   nop
   0x00000000000014a0 <+192>:   movsx  rbx,BYTE PTR [r13+rsi*1+0xa]
   0x00000000000014a6 <+198>:   movzx  eax,WORD PTR [r10+rbx*2]
   0x00000000000014ab <+203>:   xor    edi,edi
   0x00000000000014ad <+205>:   test   eax,0x100
   0x00000000000014b2 <+210>:   sete   dil
   0x00000000000014b6 <+214>:   shl    edi,0x5
   0x00000000000014b9 <+217>:   lea    ecx,[rdi+0x5a]
   0x00000000000014bc <+220>:   or     edi,0x41
   0x00000000000014bf <+223>:   test   eax,0x800
   0x00000000000014c4 <+228>:   cmovne ecx,r8d
   0x00000000000014c8 <+232>:   cmovne edi,r9d
   0x00000000000014cc <+236>:   mov    ebp,ecx
   0x00000000000014ce <+238>:   sub    ebp,edi
   0x00000000000014d0 <+240>:   add    ebp,0x1
   0x00000000000014d3 <+243>:   mov    eax,r15d
   0x00000000000014d6 <+246>:   xor    edx,edx
   0x00000000000014d8 <+248>:   idiv   ebp
   0x00000000000014da <+250>:   add    edx,ebx
   0x00000000000014dc <+252>:   mov    eax,edx
   0x00000000000014de <+254>:   sub    eax,ecx
   0x00000000000014e0 <+256>:   add    edi,eax
   0x00000000000014e2 <+258>:   add    dil,0xff
   0x00000000000014e6 <+262>:   test   eax,eax
   0x00000000000014e8 <+264>:   movzx  eax,dil
   0x00000000000014ec <+268>:   cmovle eax,edx
   0x00000000000014ef <+271>:   mov    BYTE PTR [rsp+rsi*1+0xa],al
   0x00000000000014f3 <+275>:   add    rsi,0x1
   0x00000000000014f7 <+279>:   cmp    rsi,0xa
   0x00000000000014fb <+283>:   jne    0x14a0 <function_d+192>
   0x00000000000014fd <+285>:   mov    BYTE PTR [rsp+0x14],0x0
   0x0000000000001502 <+290>:   mov    rsi,rsp
   0x0000000000001505 <+293>:   mov    rdi,r14
   0x0000000000001508 <+296>:   call   0x1090 <strcmp@plt>
   0x000000000000150d <+301>:   xor    ecx,ecx
   0x000000000000150f <+303>:   test   eax,eax
   0x0000000000001511 <+305>:   sete   cl
   0x0000000000001514 <+308>:   mov    eax,ecx
   0x0000000000001516 <+310>:   add    rsp,0x18
   0x000000000000151a <+314>:   pop    rbx
   0x000000000000151b <+315>:   pop    r12
   0x000000000000151d <+317>:   pop    r13
   0x000000000000151f <+319>:   pop    r14
   0x0000000000001521 <+321>:   pop    r15
   0x0000000000001523 <+323>:   pop    rbp
   0x0000000000001524 <+324>:   ret    